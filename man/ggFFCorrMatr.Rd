% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggFFCorrMatr.R
\name{ggFFCorrMatr}
\alias{ggFFCorrMatr}
\title{Correlation Matrix using GGPlot2 and FatFonts}
\usage{
ggFFCorrMatr(data, tileBorderColor = '#C2C2C2', tileBorderSize = 0.1,
tileFill = '#FFFFFF', shrink = -1, font = 'Cubica', fontSize = -1,
fontColorPos = 'red', fontColorNeg = 'blue', isSquare = TRUE, adjustPos = 3,
changeFontColValue = NULL, changeFontColDigit = NULL, changeBackCol = NULL, ...)
}
\arguments{
\item{data}{A vector containing the data.}

\item{tileBorderColor}{The color of the border of the tiles. (default: '#C2C2C2')}

\item{tileFill}{The fill color of the tiles. (default: '#FFFFFF')}

\item{shrink}{To what extent are the raw values reduced. For instance, if shrink = 1000 and the original data is D, then the values displayed by FatFonts will be 1000D. If shrink = -1, then shrink will be chosen automatically. (default: -1)}

\item{font}{The FatFonts family used in the plot. There are currently three FatFonts types available: "Cubica", "Miguta" and "Rotunda". (default: 'Cubica')}

\item{fontSize}{The font size of the smallest FatFonts digit. If fontSize = -1, then font size will be chosen automatically. (default: -1)}

\item{fontColorPos}{The color of positive FatFonts digits. (default:'red')}

\item{fontColorNeg}{The color of negative FatFonts digits. (default:'blue')}

\item{isSquare}{If each grid is square. It is better to display FatFonts numbers in square rather than rectangle grids. (default: TRUE)}

\item{adjustPos}{Parameter used to slightly adjust the location of FatFonts digits. (default: 3)}

\item{changeFontColValue}{A function used to change font color based on value. An example function can be defined as follow: changeFontColValueFunc <- function(oldPlot){newPlot <- oldPlot + scale_color_gradient2(); return(newPlot)}. (default: NULL)}

\item{changeFontColDigit}{A vector containing the 9 colors used to represent each digit respectively (in the order of 1 to 9). You can also use color combinations provided by the system (e.g. topo.colors(9)). (default: NULL)}

\item{changeBackCol}{A function used to change tile fill color based on value. An example function can be defined as follow: changeBackColFunc <- function(oldPlot){newPlot <- oldPlot + scale_fill_gradient2(); return(newPlot)}. (default: NULL)}

\item{...}{Other arguments passed on to methods. Not currently used.}

\item{tileVorderSize}{The size of the border of the tiles. (default: 0.1)}
}
\description{
ggFFCorrMatr() produces Correlation Matrix using GGPlot2 and FatFonts.
}
\examples{
ggFFCorrMatr(mtcars[,c(1,3:7)])

ggFFCorrMatr(mtcars[c(1, 3:7)], fontColorPos = 'blue', fontColorNeg = 'green',
 fontSize = 1)

ggFFCorrMatr(mtcars[c(1, 3:7)], font = 'Miguta')

ggFFCorrMatr(mtcars[c(1, 3:7)], shrink = 10, fontSize = 3)

ggFFCorrMatr(mtcars[c(1, 3:7)], tileFill = 'light grey', fontSize = 1)

ggFFCorrMatr(mtcars[c(1, 3:7)], isSquare = FALSE, fontSize = 1)

changeBackColFunc <- function(oldPlot){
  newPlot <- oldPlot + scale_fill_gradient2()
  return(newPlot)
}
ggFFCorrMatr(mtcars[c(1, 3:7)], changeBackCol = changeBackColFunc,
 fontColorPos = 'yellow', fontColorNeg = 'yellow', fontSize = 1)

changeFontColValueFunc <- function(oldPlot){
  newPlot <- oldPlot + scale_color_gradient2()
 return(newPlot)
}
ggFFCorrMatr(mtcars[c(1, 3:7)], changeFontColValue = changeFontColValueFunc,
 adjustPos = 1, fontSize = 1)

cols <- topo.colors(9)
ggFFCorrMatr(mtcars[c(1, 3:7)], changeFontColDigit = cols,
 adjustPos = 1, fontSize = 1)

}
